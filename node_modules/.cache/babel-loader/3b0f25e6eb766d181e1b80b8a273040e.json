{"ast":null,"code":"import \"source-map-support/register\";\n//import uuid from \"uuid\";\nimport * as dynamoDbLib from \"./libs/dynamodb-lib\";\nimport { success, failure } from \"./libs/response-lib\";\nexport async function main(event, context, callback) {\n  const data = event.body;\n  const params = {\n    TableName: process.env.tableBudgetName,\n    Item: {\n      budgetId: data.budgetId,\n      categoryId: data.categoryId,\n      //userId: event.requestContext.identity.cognitoIdentityId,\n      budgetedAmount: data.budgetedAmount,\n      leftoverLastMonth: data.leftoverLastMonth,\n      currentBalance: data.currentBalance,\n      budgetCategoryIcon: data.budgetCategoryIcon,\n      budgetItemIcon: data.budgetItemIcon,\n      createdAt: Date.now()\n    }\n  };\n\n  try {\n    await dynamoDbLib.call(\"put\", params);\n\n    const util = require('util');\n\n    console.log(util.inspect(context, {\n      showHidden: true,\n      depth: null\n    }));\n    return success(params.Item);\n  } catch (e) {\n    //console.log(e);\n    return failure({\n      status: e\n    });\n  }\n  /*dynamoDb.put(params, (error, data) => {\n  // Set response headers to enable CORS (Cross-Origin Resource Sharing)\n  \tconst headers = {\n  \t\"Access-Control-Allow-Origin\": \"*\",\n  \t\"Access-Control-Allow-Credentials\": true\n  \t};\n  \tif (error) {\n  \tconst response = {\n  \t\tstatusCode: 500,\n  \t\theaders: headers,\n  \t\tbody: JSON.stringify({ status: error })\n  \t\t};\n  \tcallback(null, response);\n  \treturn;\n  \t}\n  \tconst response = {\n  \tstatusCode: 200,\n  \theaders: headers,\n  \tbody: JSON.stringify(params.Item)\n  \t};\n  callback(null, response);\n  });*/\n\n}","map":{"version":3,"sources":["/home/robert/Projects/budget/create_budget.js"],"names":["dynamoDbLib","success","failure","main","event","context","callback","data","body","params","TableName","process","env","tableBudgetName","Item","budgetId","categoryId","budgetedAmount","leftoverLastMonth","currentBalance","budgetCategoryIcon","budgetItemIcon","createdAt","Date","now","call","util","require","console","log","inspect","showHidden","depth","e","status"],"mappings":";AAAA;AACA,OAAO,KAAKA,WAAZ,MAA6B,qBAA7B;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,qBAAjC;AAEA,OAAO,eAAeC,IAAf,CAAoBC,KAApB,EAA2BC,OAA3B,EAAoCC,QAApC,EAA8C;AAEpD,QAAMC,IAAI,GAAGH,KAAK,CAACI,IAAnB;AAEA,QAAMC,MAAM,GAAG;AACdC,IAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC,eADT;AAEdC,IAAAA,IAAI,EAAE;AACLC,MAAAA,QAAQ,EAAER,IAAI,CAACQ,QADV;AAELC,MAAAA,UAAU,EAAET,IAAI,CAACS,UAFZ;AAGL;AACAC,MAAAA,cAAc,EAAEV,IAAI,CAACU,cAJhB;AAKLC,MAAAA,iBAAiB,EAAEX,IAAI,CAACW,iBALnB;AAMLC,MAAAA,cAAc,EAAEZ,IAAI,CAACY,cANhB;AAOLC,MAAAA,kBAAkB,EAAEb,IAAI,CAACa,kBAPpB;AAQLC,MAAAA,cAAc,EAAEd,IAAI,CAACc,cARhB;AASLC,MAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AATN;AAFQ,GAAf;;AAeA,MAAI;AACH,UAAMxB,WAAW,CAACyB,IAAZ,CAAiB,KAAjB,EAAwBhB,MAAxB,CAAN;;AACA,UAAMiB,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,OAAL,CAAazB,OAAb,EAAsB;AAAC0B,MAAAA,UAAU,EAAE,IAAb;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAAtB,CAAZ;AACA,WAAO/B,OAAO,CAACQ,MAAM,CAACK,IAAR,CAAd;AACC,GALF,CAMA,OAAOmB,CAAP,EAAU;AACT;AACA,WAAO/B,OAAO,CAAC;AAAEgC,MAAAA,MAAM,EAAED;AAAV,KAAD,CAAd;AACC;AAEF;;;;;;;;;;;;;;;;;;;;;;;AA0BA","sourcesContent":["//import uuid from \"uuid\";\nimport * as dynamoDbLib from \"./libs/dynamodb-lib\";\nimport { success, failure } from \"./libs/response-lib\";\n\nexport async function main(event, context, callback) {\n\n\tconst data = event.body;\n\n\tconst params = {\n\t\tTableName: process.env.tableBudgetName,\n\t\tItem: {\n\t\t\tbudgetId: data.budgetId,\n\t\t\tcategoryId: data.categoryId,\n\t\t\t//userId: event.requestContext.identity.cognitoIdentityId,\n\t\t\tbudgetedAmount: data.budgetedAmount,\n\t\t\tleftoverLastMonth: data.leftoverLastMonth,\n\t\t\tcurrentBalance: data.currentBalance,\n\t\t\tbudgetCategoryIcon: data.budgetCategoryIcon,\n\t\t\tbudgetItemIcon: data.budgetItemIcon,\n\t\t\tcreatedAt: Date.now()\n\t\t\t}\n\t\t};\n\n\ttry {\n\t\tawait dynamoDbLib.call(\"put\", params);\n\t\tconst util = require('util');\n\t\tconsole.log(util.inspect(context, {showHidden: true, depth: null}));\n\t\treturn success(params.Item);\n\t\t}\n\tcatch (e) {\n\t\t//console.log(e);\n\t\treturn failure({ status: e });\n\t\t}\n\n\t/*dynamoDb.put(params, (error, data) => {\n// Set response headers to enable CORS (Cross-Origin Resource Sharing)\n\t\tconst headers = {\n\t\t\"Access-Control-Allow-Origin\": \"*\",\n\t\t\"Access-Control-Allow-Credentials\": true\n\t\t};\n\n\tif (error) {\n\t\tconst response = {\n\t\t\tstatusCode: 500,\n\t\t\theaders: headers,\n\t\t\tbody: JSON.stringify({ status: error })\n\t\t\t};\n\t\tcallback(null, response);\n\t\treturn;\n\t\t}\n\n\tconst response = {\n\t\tstatusCode: 200,\n\t\theaders: headers,\n\t\tbody: JSON.stringify(params.Item)\n\t\t};\n\tcallback(null, response);\n\t});*/\n\n\n}"]},"metadata":{},"sourceType":"module"}