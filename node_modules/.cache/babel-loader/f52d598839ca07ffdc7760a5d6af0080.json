{"ast":null,"code":"import \"source-map-support/register\";\nimport * as dynamoDbLib from \"./libs/dynamodb-lib\";\nimport { success, failure } from \"./libs/response-lib\";\nexport async function main(event, context) {\n  const data = event.body.attachments;\n  const params = {\n    TableName: process.env.tableName,\n    Key: {\n      transactionId: event.pathParameters.transactionId,\n      yearMonth: event.pathParameters.yearMonth\n    },\n    UpdateExpression: \"SET attachments = list_append(attachments, :attach), userId = :userId\",\n    ExpressionAttributeValues: {\n      \":attach\": data || null,\n      \":userId\": event.requestContext.identity.cognitoIdentityId || null\n    },\n    ReturnValues: \"ALL_NEW\"\n  };\n\n  try {\n    await dynamoDbLib.call(\"update\", params);\n    return success({\n      status: true\n    });\n  } catch (e) {\n    return failure({\n      status: false\n    });\n  }\n}","map":{"version":3,"sources":["/home/robert/Projects/budget/add_attachment.js"],"names":["dynamoDbLib","success","failure","main","event","context","data","body","attachments","params","TableName","process","env","tableName","Key","transactionId","pathParameters","yearMonth","UpdateExpression","ExpressionAttributeValues","requestContext","identity","cognitoIdentityId","ReturnValues","call","status","e"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,qBAA7B;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,qBAAjC;AAEA,OAAO,eAAeC,IAAf,CAAoBC,KAApB,EAA2BC,OAA3B,EAAoC;AAC1C,QAAMC,IAAI,GAAGF,KAAK,CAACG,IAAN,CAAWC,WAAxB;AACA,QAAMC,MAAM,GAAG;AACdC,IAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC,SADT;AAEdC,IAAAA,GAAG,EAAE;AACJC,MAAAA,aAAa,EAAEX,KAAK,CAACY,cAAN,CAAqBD,aADhC;AAEJE,MAAAA,SAAS,EAAEb,KAAK,CAACY,cAAN,CAAqBC;AAF5B,KAFS;AAMdC,IAAAA,gBAAgB,EAAE,uEANJ;AAOdC,IAAAA,yBAAyB,EAAE;AAC1B,iBAAWb,IAAI,IAAI,IADO;AAE1B,iBAAWF,KAAK,CAACgB,cAAN,CAAqBC,QAArB,CAA8BC,iBAA9B,IAAmD;AAFpC,KAPb;AAWdC,IAAAA,YAAY,EAAE;AAXA,GAAf;;AAcA,MAAI;AACH,UAAMvB,WAAW,CAACwB,IAAZ,CAAiB,QAAjB,EAA2Bf,MAA3B,CAAN;AACA,WAAOR,OAAO,CAAC;AAAEwB,MAAAA,MAAM,EAAE;AAAV,KAAD,CAAd;AACC,GAHF,CAIA,OAAOC,CAAP,EAAU;AACT,WAAOxB,OAAO,CAAC;AAAEuB,MAAAA,MAAM,EAAE;AAAV,KAAD,CAAd;AACC;AACD","sourcesContent":["import * as dynamoDbLib from \"./libs/dynamodb-lib\";\nimport { success, failure } from \"./libs/response-lib\";\n\nexport async function main(event, context) {\n\tconst data = event.body.attachments;\n\tconst params = {\n\t\tTableName: process.env.tableName,\n\t\tKey: {\n\t\t\ttransactionId: event.pathParameters.transactionId,\n\t\t\tyearMonth: event.pathParameters.yearMonth\n\t\t\t\t\t\t},\n\t\tUpdateExpression: \"SET attachments = list_append(attachments, :attach), userId = :userId\",\n\t\tExpressionAttributeValues: {\n\t\t\t\":attach\": data || null,\n\t\t\t\":userId\": event.requestContext.identity.cognitoIdentityId || null\n\t\t\t},\n\t\tReturnValues: \"ALL_NEW\"\n\t\t};\n\n\ttry {\n\t\tawait dynamoDbLib.call(\"update\", params);\n\t\treturn success({ status: true });\n\t\t}\n\tcatch (e) {\n\t\treturn failure({ status: false });\n\t\t}\n\t}"]},"metadata":{},"sourceType":"module"}